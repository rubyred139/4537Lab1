class TextArea {
	constructor(id, content = "") {
		this.id = id;
		this.content = content;
		this.newNote = document.createElement("textarea");
		this.newNote.setAttribute("id", `textarea-${id}`);
		this.setContent();
		this.newNote.addEventListener("blur", () => {
			this.content = this.getContent(); // Update content when editing is done
		});
	}
	setContent() {
		this.newNote.value = this.content;
	}
	getContent() {
		return this.newNote.value;
	}
}

class RemoveButton {
	constructor(id) {
		this.id = id;
		this.removeBtn = document.createElement("button");
		this.removeBtn.textContent = "remove";
		this.removeBtn.setAttribute("id", `button-${id}`);
		this.removeBtn.addEventListener("click", () => this.removeItem(id));
	}
	removeItem(id) {
		// Remove from localStorage
		const notesJSON = localStorage.getItem("notes");
		if (notesJSON) {
			const notesArray = JSON.parse(notesJSON);
			const updatedNotesArray = notesArray.filter(
				(note) => note.id !== id
			);
			localStorage.setItem("notes", JSON.stringify(updatedNotesArray));
		}
		// Remove from the DOM
		const noteElement = document.getElementById(`note-container-${id}`);
		if (noteElement) {
			noteElement.remove();
		}
	}
}

class NoteObj {
	constructor(id, note = "") {
		this.id = id;
		this.noteContent = note;
		this.noteContainer = document.createElement("div");
		this.textArea = new TextArea(this.id, this.noteContent);
		this.removeBtn = new RemoveButton(this.id);
		this.createNoteDiv();
	}
	createNoteDiv() {
		this.noteContainer.setAttribute("id", `note-container-${this.id}`);
		this.noteContainer.classList.add("note-container");

		// Append text area and remove button to the container div
		this.noteContainer.appendChild(this.textArea.newNote);
		this.noteContainer.appendChild(this.removeBtn.removeBtn);
	}
	getNoteCombo() {
		return this.noteContainer;
	}
}

const writerButton = document.getElementById("writerButton");
if (writerButton) {
	writerButton.addEventListener("click", () => {
		window.location.href = "writer.html";
	});
}

const readerButton = document.getElementById("readerButton");
if (readerButton) {
	readerButton.addEventListener("click", () => {
		window.location.href = "reader.html";
	});
}

class WebNotes {
	constructor() {
		this.notesArr = [];
		this.id = 0;
		this.displayedCount = 0;
		this.notesContainer = document.getElementById("notesContainer");
	}

	readFromStorage() {
		const existedNotes = localStorage.getItem("notes");
		if (existedNotes) {
			const existedNotesArray = JSON.parse(existedNotes);
			existedNotesArray.forEach((textAreaObj) => {
				this.id += 1;
				this.notesArr.push({
					id: textAreaObj.id,
					content: textAreaObj.content,
				});
			});
		}
	}

	displayExistedNotes() {
		this.notesArr.forEach((note) => {
			const noteObj = new NoteObj(note.id, note.content);
			this.notesContainer.append(noteObj.getNoteCombo());
			this.displayedCount += 1;
		});
	}
}

// this is generated by chatGPT
let time = new Date();
document.getElementById("time").innerHTML =
	"updated at: " +
	time.toLocaleString("en-US", {
		hour: "numeric",
		minute: "numeric",
		second: "numeric",
		hour12: true,
	});

document.getElementById("backButton").addEventListener("click", function () {
	window.location.href = "index.html";
});
